CSC D84 - Artificial Intelligence, Unit 1 - Search

________________________________________________

Student Name 1 (last, first): Ye, Rong Feng (Richard)

Student Name 2 (last, first): Prokopchuk, Samuel (Sam)

Student number 1: 1005035230

Student number 2: 1006570943

UTORid 1: yerong1

UTORid 2: prokopc3

READ THIS AND SIGN YOUR NAME AT THE END:

 I certify that I have read the UTSC code on academic
honesty and plaguarism. All work submitted as part
of this assignment is my own.

	Signed: _Rong Feng (Richard) Ye__	_Sam Prokopchuk__


(-2.5 marks for failing to provide the identifying
 information requested above)
________________________________________________

Answer the following questions. Be concise and clear
but explain carefully when needed.

1 .- (1 marks) Of BFS and DFS, which search algorithm yields the best results? (i.e. which is more likely
     to get the mouse to the cheese safely before being eaten?)
BFS yields the better results over DFS.


2 .- (1 marks) Does this mean that in general BFS is a better search algorithm? (yes/no and give reasons to
     support your answer based on your observations)
In this context, BFS is a better search algorithm (as seen in q1).
In general, BFS will find the shortest path - wheras DFS may not.
A potential downside of BFS is higher complexity if the graph is very dense, and the goal isn't to definitively find the shortest path.


3 .- (2 marks) Describe the heuristic function you used for A* search. Why is this heuristic admissible?
The heuristic function for A* search is simply the manhattan distance between the current (x, y) location and the closest cheese.
This is admissiable because on a 2d graph, the shortest possible path between two points is exactly the manhattan distance.
The manhattan distance may be less than the true cost if there are walls.


4 .- (1 marks) Explain how your heuristic function accounts for the presence of multiple cheese.
We use the manhattan distance to the closest cheese.
So farther cheeses won't make the heuristic un-admissible.
As a result, the heuristic is calculated only using the closest cheese.


5 .- (1 marks) Is A* equivalent to BFS for this problem? or is it better/worse? explain your answer based on 
     your observations.
Without considering the cat locations, BFS (the shortest path) will objectively be the optimal solution.
A* could be sub-optimal in sub cases - for example if it decides to go a route that at first seems closesr but in reality takes more time.


6 .- (2 marks) Describe your heuristic function for A*-nokitty. How does it work? what factors are considered
     into the cost function? is it admissible (yes/no and why)?
A*-nokitty is calculated by taking A* and adding ⌊80 / (1 + c)⌋.
Where c is the manhattan distance to the cat closest to the current (x, y) position.
Aside from the current (x, y) position, the closest cat and cheese are considered.
The function is not admissible because if, say the cat is directly next to the current (x, y),
then A* = [manhattan to cheese] + 40.
If the cheese was directly next to the current (x, y) position as well then this would equal:
A* = 1 + 40, which is clearly greater than the true value 1.


7 .- (2 marks) What is the largest limitation of the search algorithms implemented in this assignment?
     (i.e. is there anything we are missing that could lead to a smarter mouse?) - this is
     a more or less open question, but we talked about it in lecture!
The mouse could certainly improved if it used (for example) BFS in its heuristic function to determine if cats would be in its path.
Another consideration is if the mouse were to use monte-carlo simulations to determine the probability of encountering a cat, going one direction, it could potentially be dramatically improved.


_____________________________________________________

Mark with an 'x' where appropriate. If something is only working partially, briefly describe what works, what
doesn't work, or what problems exist.
	
		Complete/Working	Partial		Not done

DFS       x
(* DFS is implemented properly, but fails to find the cheese in reasonable time, in some cases).

BFS       x

A*        x

H         x

H_no_cats x

_____________________________________________________

Marking:

(2.5 marks) Working implementation of BFS

(2.5 marks) Working implementation of DFS

(5 marks)  A* heuristic function is implemented, reasonable,
           and admissible.

(2.5 marks) Working implementation of A* (using your heuristic)

(5 marks) Implemented a **clever**  A*-nokitty heuristic
          and a working A*-nokitty search. The search
          should produce a smarter mouse than all of
          BFS/DFS/A*.

          The heuristic should account for known game 
          factors that affect the mouse's chance of success.

(10 marks) Answers in this report file

(up to 10 marks) Assigned by the TA based on how smart your
		 mouse actually is in the no-kitty mode. 
         Mind what is going on in
		 the game, and think about how to make your
		 mouse most likely to win!

Total for A1:       / out of 37.5

